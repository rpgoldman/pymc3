# Stubs for pymc3.distributions.dist_math (Python 3.7)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import theano
from .special import gammaln
from pymc3.theanof import floatX
from theano.scalar import UnaryScalarOp
from typing import Any

f = floatX
c: Any

def bound(logp: Any, *conditions: Any, **kwargs: Any): ...
def alltrue_elemwise(vals: Any): ...
def alltrue_scalar(vals: Any): ...
def logpow(x: Any, m: Any): ...
def factln(n: Any): ...
def binomln(n: Any, k: Any): ...
def betaln(x: Any, y: Any): ...
def std_cdf(x: Any): ...
def normal_lcdf(mu: Any, sigma: Any, x: Any): ...
def normal_lccdf(mu: Any, sigma: Any, x: Any): ...
def sd2rho(sd: Any): ...
def rho2sd(rho: Any): ...
def log_normal(x: Any, mean: Any, **kwargs: Any): ...
def MvNormalLogp(): ...

class SplineWrapper(theano.Op):
    __props__: Any = ...
    spline: Any = ...
    def __init__(self, spline: Any) -> None: ...
    def make_node(self, x: Any): ...
    _grad_op: Any = ...
    @property
    def grad_op(self): ...
    def perform(self, node: Any, inputs: Any, output_storage: Any) -> None: ...
    def grad(self, inputs: Any, grads: Any): ...

class I0e(UnaryScalarOp):
    nfunc_spec: Any = ...
    def impl(self, x: Any): ...

i0e: Any

def random_choice(*args: Any, **kwargs: Any): ...
