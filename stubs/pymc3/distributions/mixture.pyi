# Stubs for pymc3.distributions.mixture (Python 3.7)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from ..math import logsumexp
from .continuous import Normal, get_tau_sd
from .dist_math import bound, random_choice
from .distribution import Discrete, Distribution, draw_values, generate_samples
from typing import Any, Optional

def all_discrete(comp_dists: Any): ...

class Mixture(Distribution):
    w: Any = ...
    comp_dists: Any = ...
    mean: Any = ...
    mode: Any = ...
    def __init__(self, w: Any, comp_dists: Any, *args: Any, **kwargs: Any) -> None: ...
    def _comp_logp(self, value: Any): ...
    def _comp_means(self): ...
    def _comp_modes(self): ...
    def _comp_samples(self, point: Optional[Any] = ..., size: Optional[Any] = ...): ...
    def logp(self, value: Any): ...
    def random(self, point: Optional[Any] = ..., size: Optional[Any] = ...): ...

class NormalMixture(Mixture):
    mu: Any = ...
    sd: Any = ...
    def __init__(self, w: Any, mu: Any, comp_shape: Any = ..., *args: Any, **kwargs: Any) -> None: ...
    def _repr_latex_(self, name: Optional[Any] = ..., dist: Optional[Any] = ...): ...
