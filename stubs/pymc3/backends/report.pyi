# Stubs for pymc3.backends.report (Python 3.7)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import enum
from ..util import get_untransformed_name, is_transformed_name
from collections import namedtuple
from typing import Any, Optional

logger: Any

class WarningType(enum.Enum):
    DIVERGENCE: int = ...
    TUNING_DIVERGENCE: int = ...
    DIVERGENCES: int = ...
    TREEDEPTH: int = ...
    BAD_PARAMS: int = ...
    CONVERGENCE: int = ...
    BAD_ACCEPTANCE: int = ...

SamplerWarning = namedtuple('SamplerWarning', 'kind, message, level, step, exec_info, extra')
_LEVELS: Any

class SamplerReport:
    _chain_warnings: Any = ...
    _global_warnings: Any = ...
    _effective_n: Any = ...
    _gelman_rubin: Any = ...
    def __init__(self) -> None: ...
    @property
    def _warnings(self): ...
    @property
    def ok(self): ...
    def raise_ok(self, level: str = ...) -> None: ...
    def _run_convergence_checks(self, trace: Any, model: Any): ...
    def _add_warnings(self, warnings: Any, chain: Optional[Any] = ...) -> None: ...
    def _log_summary(self) -> None: ...
    def _slice(self, start: Any, stop: Any, step: Any): ...

def merge_reports(reports: Any): ...
