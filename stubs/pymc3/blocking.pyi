# Stubs for pymc3.blocking (Python 3.7)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from collections import namedtuple
from typing import Any

VarMap = namedtuple('VarMap', 'var, slc, shp, dtyp')

DataMap = namedtuple('DataMap', 'list_ind, slc, shp, dtype, name')

class ArrayOrdering:
    vmap: Any = ...
    by_name: Any = ...
    size: int = ...
    def __init__(self, vars: Any) -> None: ...
    def __getitem__(self, key: Any): ...

class DictToArrayBijection:
    ordering: Any = ...
    dpt: Any = ...
    array_dtype: str = ...
    def __init__(self, ordering: Any, dpoint: Any) -> None: ...
    def map(self, dpt: Any): ...
    def rmap(self, apt: Any): ...
    def mapf(self, f: Any): ...

class ListArrayOrdering:
    vmap: Any = ...
    intype: Any = ...
    size: int = ...
    def __init__(self, list_arrays: Any, intype: str = ...) -> None: ...

class ListToArrayBijection:
    ordering: Any = ...
    list_arrays: Any = ...
    def __init__(self, ordering: Any, list_arrays: Any) -> None: ...
    def fmap(self, list_arrays: Any): ...
    def dmap(self, dpt: Any): ...
    def rmap(self, array: Any): ...

class DictToVarBijection:
    var: Any = ...
    idx: Any = ...
    dpt: Any = ...
    def __init__(self, var: Any, idx: Any, dpoint: Any) -> None: ...
    def map(self, dpt: Any): ...
    def rmap(self, apt: Any): ...
    def mapf(self, f: Any): ...

class Compose:
    fa: Any = ...
    fb: Any = ...
    def __init__(self, fa: Any, fb: Any) -> None: ...
    def __call__(self, x: Any): ...
